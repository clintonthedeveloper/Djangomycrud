[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "crudAPP.migrations.0001_initial",
        "description": "crudAPP.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Student',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=30)),",
        "detail": "crudAPP.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CrudappConfig",
        "kind": 6,
        "importPath": "crudAPP.apps",
        "description": "crudAPP.apps",
        "peekOfCode": "class CrudappConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'crudAPP'",
        "detail": "crudAPP.apps",
        "documentation": {}
    },
    {
        "label": "Student",
        "kind": 6,
        "importPath": "crudAPP.models",
        "description": "crudAPP.models",
        "peekOfCode": "class Student(models.Model):\n    name = models.CharField(max_length=30, blank=False, null=False)\n    email = models.EmailField()\n    age = models.IntegerField()\n    gender = models.CharField(max_length=30, blank=False, null=False)\nclass Meta:\n    db_table = 'student'",
        "detail": "crudAPP.models",
        "documentation": {}
    },
    {
        "label": "Meta",
        "kind": 6,
        "importPath": "crudAPP.models",
        "description": "crudAPP.models",
        "peekOfCode": "class Meta:\n    db_table = 'student'",
        "detail": "crudAPP.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "crudAPP.urls",
        "description": "crudAPP.urls",
        "peekOfCode": "urlpatterns = [\n    #   path('admin/', admin.site.urls),\n    path('', views.index),\n    path('insert',views.insertData,name=\"insertDaata\"),\n    path('update/<id>', views.updateData, name=\"updateData\"),\n    path('delete/<id>', views.deleteData, name=\"deleteData\"),\n    path('login', views.handlelogin, name=\"handlelogin\"),\n    # path('logout', views.handlelogout, name=\"handlelogout\"),\n    path('signup', views.handlesignup, name=\"handlesignup\")\n]",
        "detail": "crudAPP.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "crudAPP.views",
        "description": "crudAPP.views",
        "peekOfCode": "def index(request):\n    data = Student.objects.all()\n    context = {\"data\": data}\n    return render(request, \"index.html\", context)\n# def about(request):\n#     return render(request, \"about.html\")\ndef handlesignup(request):\n    if request.method == \"POST\":\n        username = request.POST.get(\"username\")\n        password = request.POST.get(\"password\")",
        "detail": "crudAPP.views",
        "documentation": {}
    },
    {
        "label": "handlesignup",
        "kind": 2,
        "importPath": "crudAPP.views",
        "description": "crudAPP.views",
        "peekOfCode": "def handlesignup(request):\n    if request.method == \"POST\":\n        username = request.POST.get(\"username\")\n        password = request.POST.get(\"password\")\n        # print(username,password)\n        myuser = User.objects.create_user(username, password)\n        myuser.save()\n    return render(request, \"signup.html\")\ndef handlelogin(request):\n    if request.method == \"POST\":",
        "detail": "crudAPP.views",
        "documentation": {}
    },
    {
        "label": "handlelogin",
        "kind": 2,
        "importPath": "crudAPP.views",
        "description": "crudAPP.views",
        "peekOfCode": "def handlelogin(request):\n    if request.method == \"POST\":\n        username = request.POST.get(\"username\")\n        password = request.POST.get(\"password\")\n        myuser = authenticate(username=username, password=password)\n        if myuser is not None:\n            login(request, myuser)\n            return redirect('/')\n        else:\n            return redirect('/login')",
        "detail": "crudAPP.views",
        "documentation": {}
    },
    {
        "label": "insertData",
        "kind": 2,
        "importPath": "crudAPP.views",
        "description": "crudAPP.views",
        "peekOfCode": "def insertData(request):\n    if request.method == \"POST\":\n        name = request.POST.get('name')\n        email = request.POST.get('email')\n        age = request.POST.get('age')\n        gender = request.POST.get('gender')\n        # print(name,email,age,gender)\n        query = Student(name=name, email=email, age=age, gender=gender)\n        query.save()\n        return redirect(\"/\")",
        "detail": "crudAPP.views",
        "documentation": {}
    },
    {
        "label": "updateData",
        "kind": 2,
        "importPath": "crudAPP.views",
        "description": "crudAPP.views",
        "peekOfCode": "def updateData(request, id):\n    if request.method == \"POST\":\n        name = request.POST.get('name')\n        email = request.POST.get('email')\n        age = request.POST.get('age')\n        gender = request.POST.get('gender')\n        edit = Student.objects.get(id=id)\n        edit.name = name\n        edit.email = email\n        edit.gender = gender",
        "detail": "crudAPP.views",
        "documentation": {}
    },
    {
        "label": "deleteData",
        "kind": 2,
        "importPath": "crudAPP.views",
        "description": "crudAPP.views",
        "peekOfCode": "def deleteData(request, id):\n    d = Student.objects.get(id=id)\n    d.delete()\n    return redirect(\"/\")\n    return render(request, \"index.html\")\ndef handlelogout(request):\n    logout(request)\n    return redirect('/signup')",
        "detail": "crudAPP.views",
        "documentation": {}
    },
    {
        "label": "handlelogout",
        "kind": 2,
        "importPath": "crudAPP.views",
        "description": "crudAPP.views",
        "peekOfCode": "def handlelogout(request):\n    logout(request)\n    return redirect('/signup')",
        "detail": "crudAPP.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "crudproject2.asgi",
        "description": "crudproject2.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "crudproject2.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-nloagzfw4nv$2%(c&!m+-fgv03lym28=r()c%se^)5pc7u#9ua'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-nloagzfw4nv$2%(c&!m+-fgv03lym28=r()c%se^)5pc7u#9ua'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'crudAPP',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'crudAPP',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'crudAPP',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'crudAPP',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\nMIDDLEWARE = [",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'crudproject2.urls'",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "ROOT_URLCONF = 'crudproject2.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "WSGI_APPLICATION = 'crudproject2.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\n# DATABASES = {\n#     'default': {\n#         'ENGINE': 'django.db.backends.sqlite3',\n#         'NAME': BASE_DIR / 'db.sqlite3',\n#     }\n# }\nDATABASES= {",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "crudproject2.settings",
        "description": "crudproject2.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "crudproject2.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "crudproject2.urls",
        "description": "crudproject2.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('',include('crudAPP.urls'))\n]",
        "detail": "crudproject2.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "crudproject2.wsgi",
        "description": "crudproject2.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "crudproject2.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'crudproject2.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]